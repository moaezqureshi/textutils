{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","background","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.eaa3a765.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'; \r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\"aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'set title here',\r\n    aboutText : 'about text here'\r\n\r\n} ","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Uppercase was Clicked:\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLowClick =()=>{\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleCopy = () => {\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to Clipboard\",\"success\");\r\n  }\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Removed Extra Spaces\",\"success\");\r\n}\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <hr />\r\n    <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{background : props.mode==='dark'?'darkgrey':'white', color :props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1 my-2\" onClick={handleUpClick}>Convert to UPPERCASE</button>\r\n      <button className=\"btn btn-primary mx-1 my-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n      <h1>Your text Summary</h1>\r\n      <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { \n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n//  } \n// from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode] = useState(\"light\"); //whether dark mode is enabled or not\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#033142\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      \n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        \n          {/* <Routes>\n          <Route element={<About mode={mode} />}path=\"/about\">\n          \n          </Route>\n          \n          <Route element={<TextForm showAlert={showAlert} heading=\"Enter the text analyze Below\" mode={mode}/>} path=\"/\">\n          \n          </Route>\n        </Routes> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text analyze Below\" mode={mode}/>        \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}